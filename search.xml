<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[利用Hexo+Github搭建自己的博客]]></title>
    <url>%2F2019%2F08%2F15%2F%E5%88%A9%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[首先注册一个Github ——基于windows系统 1 在Github上创建自己的仓库1.1 新建一个仓库，点new repository 1.2 创建自己的仓库名（Repository name）注意，这里的仓库名的形式一定要为 username.git.io 的形式，username就是你github用户名。如果两者不统一，下面操作会出现404的情况。 2 环境准备2.1 安装node.js和git去nodejs官网和git官网下载对应系统的安装包，按提示安装。检验安装成功：（查看node当前版本）安装完后打开cmd或者gitbash任意位置，分别输入node -v,npm -v和git--version（注意是两个横线），如果结果如下，说明node和git已安装成功。 右击鼠标，会发现功能栏多出了两个git的功能，git bash here表示在当前目录下运行git bash（在不同的目录下运行效果不一样，切记） 2.2 SSH授权任意位置打开git bash，运行 $ ssh-keygen -t rsa 接着回车三下,如下所示则创建公私钥成功， 回车默认的是把公钥和私钥保存在默认的路径，当然你也可以选择自己的路径，把路径输入即可，但是不建议这样做，后面会出问题。 运行下面两条指令 12$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;$ ssh-add ~/.ssh/id_rsa 这样就会在C盘用户目录下生成id_rsa和id_rsa.pub这两个文件，前者是私钥，后者是公钥，用记事本打开id_rsa.pub，复制其中的全部内容，添加到GitHub上，这样本地的id_rsa密钥就可以和GitHub上的id_rsa.pub公钥进行配对，授权成功。 2.3 在github上添加SSH key点击右上角的头像打开setting，在SSH and GPGkey选项中点击New SSH key，把上述所说的id_rsa.pub（用记事本打开！）中的内容全部复制到框框中，完成授权。 SSH key添加之后，就可以在本机git bash中进行测试，输入ssh -T git@github.com进行测试 。 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access. 看到这个信息说明SSH已配置成功！ 如果出现无法登陆的情况，先把之前生成的文件懂删了以后再重新生成一下ssh。（建议使用默认目录，否则这个地方会出问题） 2.4 安装hexo$ npm install hexo-cli -g 注意：Mac系统，则需要 $ sudo npm install hexo-cli -g 附：1、Node.js ：Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。2、npm：npm全称为Node Package Manager，是一个基于Node.js的包管理器，也是整个Node.js社区最流行、支持的第三方模块最多的包管理器。npm的初衷：JavaScript开发人员更容易分享和重用代码。3、cpnm：cnpm即淘宝npm镜像，这是一个完整的npmjs.org镜像。 4、由于npm服务器在国外，有时会出现速度慢、短路的现象，建议使用cnpm操作会更顺畅，cnpm由阿里云赞助，所以是国内镜像，由于个人技术有限，该镜像在深层次领域可能会有部分限制。 安装cnpm：便捷可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm: 1$ npm install -g cnpm --registry=https://registry.npm.taobao.org 更多内容可查看http://npm.taobao.org 3 利用Hexo搭建一个博客3.1 初始化Hexo在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是E:\Workspaces\hexo，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。 12$ cd /f/Workspaces/hexo/$ hexo init 3.2 生成静态页面12$ hexo clean$ hexo g g 即generate 3.3 启动服务$ hexo s s 即server 然后打开浏览器，输入地址localhost:4000 即可看到效果 4 发一篇文章4.1 命令方式$ hexo new test 此时会在source/_posts目录下生成test.md文件，输入些许内容，然后保存.生成下，看看效果,调试三部曲： 123$ hexo clean$ hexo g$ hexo s 访问 localhost:4000 即可 4.2 直接方式在 source/_posts/下新建一个.md文件也可 5 部署到Github5.1 修改配置文件网站的设置大部分都在config.yml文件中，详细配置可以查看官方文档下面只列出简单常用配置: title -&gt; 网站标题 subtitle -&gt; 网站副标题 description -&gt; 网站描述 author -&gt; 您的名字 language -&gt; 网站使用的语言 注意：进行配置时，需要在冒号:后加一个英文空格 例：title: test 配置deploy1234deploy: type: git repo: &lt;repository url&gt; branch: [branch] branch为分支，默认为master,可以不配置 repo为仓库地址，在github上新建仓库后，可复制此地址 5.2 安装 hexo-deployer-git$ npm install hexo-deployer-git --save 5.3 部署123$ hexo clean$ hexo g$ hexo s 不妨先三部曲，然后 $ hexo d d 即deploy 6 换一个好看的主题Hexo 中有很多主题，可以在官网查看。下面列举更换主题的一般套路： 6.1 下载主题资源1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 6.2 应用下载的主题在网站配置文件config.yml中，配置theme theme: nextnext是主题名称，具体的可查看主题的文档 6.3 主题其他配置可在/theme/{theme}/_config.yml 主题的配置文件下进行主题的配置。接下来，可以执行万能的调试命令看看效果 123$ hexo clean$ hexo g$ hexo s]]></content>
  </entry>
</search>
