<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>局域网正常，但上不了网，问题小结</title>
      <link href="/2019/08/20/%E5%B1%80%E5%9F%9F%E7%BD%91%E6%AD%A3%E5%B8%B8%EF%BC%8C%E4%BD%86%E4%B8%8A%E4%B8%8D%E4%BA%86%E7%BD%91%EF%BC%8C%E9%97%AE%E9%A2%98%E5%B0%8F%E7%BB%93/"/>
      <url>/2019/08/20/%E5%B1%80%E5%9F%9F%E7%BD%91%E6%AD%A3%E5%B8%B8%EF%BC%8C%E4%BD%86%E4%B8%8A%E4%B8%8D%E4%BA%86%E7%BD%91%EF%BC%8C%E9%97%AE%E9%A2%98%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<center>网络连接不正常可能是由于多方面原因造成，它跟计算机硬件系统、操作系统、以及网络健康状况都可能有关系。</center><a id="more"></a><h1 id="1-系统设置和硬件配置问题"><a href="#1-系统设置和硬件配置问题" class="headerlink" title="1 系统设置和硬件配置问题"></a>1 系统设置和硬件配置问题</h1><p><strong>网络连接不正常可能是由于多方面原因造成，它跟计算机硬件系统、操作系统、以及网络健康状况都可能有关系。如果您遇到上不了网的问题，在设置好用户计算机的IP地址后，可先按照以下步骤进行故障排查：</strong></p><p><strong>1. 先确认是所有网站都上不去还是个别网站或网页打不开？</strong></p><p>　　如果是个别网站或网页进不去（如联众游戏），这时有可能是网站太忙而不能接受更多的用户访问或者是因为游戏软件等已经升级，需要用户去更换新的软件。</p><p>　　如果是所有站点都进不去，这时可以进行第二步。</p><p><strong>2. 网卡与单元网络交换机之间的连接是否正常。</strong></p><p>　　方法：先查看网线（灰色线带透明水晶头）是否已经接入了计算机后的网卡中，确定网线已经连接好后；再查看网卡上的link灯是不是亮的（在网卡接入网线处）。如果不亮，说明到交换机的网络链路是不正常的，此时再进行第三步。</p><p><strong>3. 网卡状态是否正常。</strong></p><p>　　方法：用右键点击桌面上“我的电脑”图标，依次点击“属性”、“设备管理器”、“网络适配器”，察看网卡是否正常。如果网卡选项上出现黄色的感叹号，说明网卡的安装不正确。</p><p><strong>4. 查看本机的网络配置。</strong></p><p>　　方法：点击“开始”、“运行”，在命令行里输入winipcfg命令。在“IP配置”中，选中自己计算机中所安装的网卡的型号，查看IP配置信息是否与工作人员留给您的一致。</p><p>　　注意：请不要在“拨号网络适配器”中设置IP信息，这样会造成网络地址冲突，导致网络中断。</p><p><strong>5. 进行到网关活到某个网站的连接测试。</strong></p><p>　　方法：点击“开始”、“运行”，在命令行里输入 ping xxx.xxx.xxx.xxx –t (xxx.xxx.xxx.xxx代表某一个IP地址)，用这个命令，可以测试到自己的网关和别的WWW站点的连接是否畅通。另外，也可以用这种格式：ping 域名。例如：ping zbinfo.net。如果反馈信息是Request timed out，表明网卡或网络不正常。如果反馈信息是Destination host unreachable，表明网线没有连接到网卡上。如果反馈信息类似于Reply from 10.10.0.1: bytes=32 time&lt;10ms TTL=64,表明到这个IP地址的连接是正常的。DNS没有解析！在运行中输入： ipconfig /all 查看当前的网络地址！</p><h1 id="2-感染了病毒所致"><a href="#2-感染了病毒所致" class="headerlink" title="2 感染了病毒所致"></a>2 感染了病毒所致</h1><p>这种情况往往表现在打开IE时，在IE界面的左下框里提示：正在打开网页，但老半天没响应。在任务管理器里查看进程，（进入方法，把鼠标放在任务栏上，按右键—任务管理器—进程）看看CPU的占用率如何，如果是100%，可以肯定，是感染了病毒，这时你想运行其他程序简直就是受罪。这就要查查是哪个进程贪婪地占用了CPU资源。</p><p>找到后，最好把名称记录下来，然后点击结束，如果不能结束，则要启动到安全模式下把该东东删除，还要进入注册表里，（方法：开始→运行，输入regedit）在注册表对话框里，点编辑—查找，输入那个程序名，找到后，点鼠标右键删除，然后再进行几次的搜索，往往能彻底删除干净。</p><p>有很多的病毒，杀毒软件无能为力时，唯一的方法就是手动删除。</p><h1 id="3-与设置代理服务器有关"><a href="#3-与设置代理服务器有关" class="headerlink" title="3 与设置代理服务器有关"></a>3 与设置代理服务器有关</h1><p>有些朋友，出于某些方面考虑，在浏览器里设置了代理服务器（控制面板–Internet选项—连接—局域网设置—为LAN使用代理服务器），设置代理服务器是不影响QQ联网的，因为QQ用的是4000端口，而访问互联网使用的是80或8080端口。</p><p>这就是很多的人不明白为什么QQ能上，而网页不能打开的原因。而代理服务器一般不是很稳定，有时侯能上，有时候不能上。如果有这样设置的，请把代理取消就可以了。</p><h1 id="4-系统文件丢失导致IE不能正常启动"><a href="#4-系统文件丢失导致IE不能正常启动" class="headerlink" title="4 系统文件丢失导致IE不能正常启动"></a>4 系统文件丢失导致IE不能正常启动</h1><p>这种现象颇为常见，由于：</p><p>　　1. 系统的不稳定 表现为死机频繁、经常莫名重启、非法关机造成系统文件丢失；</p><p>　　2. 软硬件的冲突常表现为安装了某些程序引起网卡驱动的冲突或与IE的冲突。自从INTEL推出超线程CPU后，有一个突出的问题是XP SP1下的IE6与超线程产生冲突；</p><p>　　3. 病毒的侵扰 导致系统文件损坏或丢失。</p><p>　　如果是第一种情况，可尝试修复系统，2K或XP系统下，放入原安装光盘（注意：一定要原安装光盘），在开始—运行里输入sfc /scanow，按回车。98的系统也可以用sfc命令进行检查。</p><p>　　如果是第二种情况，可以把最近安装的硬件或程序卸载，2K或XP的系统可以在机器启动后，长按F8，进入启动菜单，选择“最后一次正确的配置”，若是XP系统，还可以利用系统的还原功能，一般能很快解决问题。</p><p>　　如果是XP的系统因超线程CPU的原因，可以在BIOS里禁用超线程，或升级到SP2。（当然，XP如何升级SP2涉及到很多知识及要注意的问题，在此限于篇幅不再详述）。这种情况下，QQ里自带的TT浏览器一般能正常浏览，可改用一试。</p><p>　　如果是第三种情况，则要对系统盘进行全面的查杀病毒。</p><p>　　还有一种现象也需特别留意：就是能打开网站的首页，但不能打开二级链接，如果是这样，处理的方法是重新注册如下的DLL文件：</p><p>　　在开始—运行里输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">　　regsvr32 Shdocvw.dll</span><br><span class="line"></span><br><span class="line">　　regsvr32 Shell32.dll　（注意这个命令，先不用输）</span><br><span class="line"></span><br><span class="line">　　regsvr32 Oleaut32.dll</span><br><span class="line"></span><br><span class="line">　　regsvr32 Actxprxy.dll</span><br><span class="line"></span><br><span class="line">　　regsvr32 Mshtml.dll</span><br><span class="line"></span><br><span class="line">　　regsvr32 Urlmon.dll</span><br><span class="line"></span><br><span class="line">　　regsvr32 Msjava.dll</span><br><span class="line"></span><br><span class="line">　　regsvr32 Browseui.dll</span><br></pre></td></tr></table></figure><p>　　注意：每输入一条，按回车。第二个命令可以先不用输，输完这些命令后重新启动windows，如果发现无效，再重新输入一遍，这次输入第二个命令。</p><h1 id="5-IE损坏"><a href="#5-IE损坏" class="headerlink" title="5 IE损坏"></a>5 IE损坏</h1><p>以上方法若果都不奏效，有可能是IE的内核损坏，虽经系统修复，亦无法弥补，那么重装IE就是最好的方法了。</p><p>　　如果是98或2K系统，IE的版本若是5.0，建议升级到6.0。</p><p>　　98的系统如果已经升级安装了6.0，那么在控制面板里点击添加/删除程序，将会弹出一个修复对话框，选择默认的修复，重新启动即可。</p><p>　　如果是2K+IE6.0或XP（自带的IE就是6.0的）的系统，重新IE有点麻烦，有两种方法：</p><p>　　1. 打开注册表，展开HKEY_LOCAL_MACHINESOFTWAREMicrosoftActive SetupInstalled Components{ 89820200-ECBD-11cf-8B85-</p><p>00AA005B4383 }，将IsInstalled的DWORD的值改为0即可；</p><p>　　2. 放入XP安装光盘，在开始 → 运行里输入“rundll32.exe setupapi,InstallHinfSection DefaultInstall 132%windir%Infie.inf”</p><p>　　注：重装IE并不一定就能解决问题，仅是一个处理问题的思路而已。</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 网络问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Hexo+Github搭建自己的博客</title>
      <link href="/2019/08/15/%E5%88%A9%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/08/15/%E5%88%A9%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p align="right">——基于windows系统</p><a id="more"></a><hr><h1 id="1-在Github上创建自己的仓库"><a href="#1-在Github上创建自己的仓库" class="headerlink" title="1 在Github上创建自己的仓库"></a>1 在Github上创建自己的仓库</h1><h2 id="1-1-新建一个仓库，点new-repository"><a href="#1-1-新建一个仓库，点new-repository" class="headerlink" title="1.1 新建一个仓库，点new repository"></a>1.1 新建一个仓库，点new repository</h2><p><img src="https://s2.ax1x.com/2019/11/23/MbhG4J.png" alt="MbhG4J.png">)</p><h2 id="1-2-创建自己的仓库名（Repository-name）"><a href="#1-2-创建自己的仓库名（Repository-name）" class="headerlink" title="1.2 创建自己的仓库名（Repository name）"></a>1.2 创建自己的仓库名（Repository name）</h2><p>注意，这里的仓库名的形式一定要为 username.git.io 的形式，username就是你github用户名。如果两者不统一，下面操作会出现404的情况。</p><p><img src="https://s2.ax1x.com/2019/11/23/Mb4wzn.png" alt="Mb4wzn.png"></p><hr><h1 id="2-环境准备"><a href="#2-环境准备" class="headerlink" title="2 环境准备"></a>2 环境准备</h1><h2 id="2-1-安装node-js和git"><a href="#2-1-安装node-js和git" class="headerlink" title="2.1 安装node.js和git"></a>2.1 安装node.js和git</h2><p>去<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs官网</a>和<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git官网</a>下载对应系统的安装包，按提示安装。<br>检验安装成功：（查看node当前版本）<br>安装完后打开cmd或者gitbash任意位置，分别输入<code>node -v</code>,<code>npm -v</code>和<code>git--version</code>（注意是两个横线），如果结果如下，说明node和git已安装成功。</p><p><img src="https://s2.ax1x.com/2019/11/23/Mb46dU.png" alt="Mb46dU.png"></p><p><img src="https://s2.ax1x.com/2019/11/23/Mb4yZT.png" alt="Mb4yZT.png"></p><p>右击鼠标，会发现功能栏多出了两个git的功能，git bash here表示在当前目录下运行git bash（在不同的目录下运行效果不一样，切记）</p><p><img src="https://s2.ax1x.com/2019/11/23/Mb4rLV.png" alt="Mb4rLV.png"></p><h2 id="2-2-SSH授权"><a href="#2-2-SSH授权" class="headerlink" title="2.2 SSH授权"></a>2.2 SSH授权</h2><p>任意位置打开git bash，运行</p><p><code>$ ssh-keygen -t rsa</code></p><p>接着回车三下,如下所示则创建公私钥成功， 回车默认的是把公钥和私钥保存在默认的路径，当然你也可以选择自己的路径，把路径输入即可，但是不建议这样做，后面会出问题。</p><p><img src="https://s2.ax1x.com/2019/11/23/Mb4Ds0.png" alt="Mb4Ds0.png"></p><p>运行下面两条指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br><span class="line">$ ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>这样就会在C盘用户目录下生成id_rsa和id_rsa.pub这两个文件，前者是私钥，后者是公钥，用记事本打开id_rsa.pub，复制其中的全部内容，添加到GitHub上，这样本地的id_rsa密钥就可以和GitHub上的id_rsa.pub公钥进行配对，授权成功。</p><h2 id="2-3-在github上添加SSH-key"><a href="#2-3-在github上添加SSH-key" class="headerlink" title="2.3 在github上添加SSH key"></a>2.3 在github上添加SSH key</h2><p>点击右上角的头像打开setting，在SSH and GPGkey选项中点击New SSH key，把上述所说的id_rsa.pub（用记事本打开！）中的内容全部复制到框框中，完成授权。</p><p><img src="https://s2.ax1x.com/2019/11/23/Mb4coF.png" alt="Mb4coF.png"></p><p><img src="https://s2.ax1x.com/2019/11/23/Mb42i4.png" alt="Mb42i4.png"></p><p>SSH key添加之后，就可以在本机git bash中进行测试，输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>进行测试 。  </p><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access. 看到这个信息说明SSH已配置成功！</p><p><img src="https://s2.ax1x.com/2019/11/23/Mb4RJJ.png" alt="Mb4RJJ.png"></p><p>如果出现无法登陆的情况，先把之前生成的文件懂删了以后再重新生成一下ssh。（建议使用默认目录，否则这个地方会出问题）</p><h2 id="2-4-安装hexo"><a href="#2-4-安装hexo" class="headerlink" title="2.4 安装hexo"></a>2.4 安装hexo</h2><p><code>$ npm install hexo-cli -g</code></p><p>注意：Mac系统，则需要</p><p><code>$ sudo npm install hexo-cli -g</code></p><h2 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h2><p>1、Node.js ：Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。<br>2、npm：npm全称为Node Package Manager，是一个基于Node.js的包管理器，也是整个Node.js社区最流行、支持的第三方模块最多的包管理器。<br>npm的初衷：JavaScript开发人员更容易分享和重用代码。<br>3、cpnm：cnpm即淘宝npm镜像，这是一个完整的npmjs.org镜像。</p><p>4、由于npm服务器在国外，有时会出现速度慢、短路的现象，建议使用cnpm操作会更顺畅，cnpm由阿里云赞助，所以是国内镜像，由于个人技术有限，该镜像在深层次领域可能会有部分限制。</p><h3 id="安装cnpm："><a href="#安装cnpm：" class="headerlink" title="安装cnpm："></a>安装cnpm：</h3><p>便捷可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>更多内容可查看<a href="http://npm.taobao.org" target="_blank" rel="noopener">http://npm.taobao.org</a></p><hr><h1 id="3-利用Hexo搭建一个博客"><a href="#3-利用Hexo搭建一个博客" class="headerlink" title="3 利用Hexo搭建一个博客"></a>3 利用Hexo搭建一个博客</h1><h2 id="3-1-初始化Hexo"><a href="#3-1-初始化Hexo" class="headerlink" title="3.1 初始化Hexo"></a>3.1 初始化Hexo</h2><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是E:\Workspaces\hexo，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /f/Workspaces/hexo/</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><h2 id="3-2-生成静态页面"><a href="#3-2-生成静态页面" class="headerlink" title="3.2 生成静态页面"></a>3.2 生成静态页面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>g 即generate</p><h2 id="3-3-启动服务"><a href="#3-3-启动服务" class="headerlink" title="3.3 启动服务"></a>3.3 启动服务</h2><p><code>$ hexo s</code>  </p><p>s 即server</p><p>然后打开浏览器，输入地址<a href="localhost:4000" target="_blank" rel="noopener">localhost:4000</a> 即可看到效果</p><hr><h1 id="4-发一篇文章"><a href="#4-发一篇文章" class="headerlink" title="4 发一篇文章"></a>4 发一篇文章</h1><h2 id="4-1-命令方式"><a href="#4-1-命令方式" class="headerlink" title="4.1 命令方式"></a>4.1 命令方式</h2><p><code>$ hexo new test</code></p><p>此时会在source/_posts目录下生成test.md文件，输入些许内容，然后保存.生成下，看看效果,调试三部曲：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>访问 <a href="localhost:4000" target="_blank" rel="noopener">localhost:4000</a> 即可</p><h2 id="4-2-直接方式"><a href="#4-2-直接方式" class="headerlink" title="4.2 直接方式"></a>4.2 直接方式</h2><p>在 <strong>source/_posts/</strong>下新建一个.md文件也可</p><hr><h1 id="5-部署到Github"><a href="#5-部署到Github" class="headerlink" title="5 部署到Github"></a>5 部署到Github</h1><h2 id="5-1-修改配置文件"><a href="#5-1-修改配置文件" class="headerlink" title="5.1 修改配置文件"></a>5.1 修改配置文件</h2><p>网站的设置大部分都在<strong>config.yml</strong>文件中，详细配置可以查看<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">官方文档</a><br>下面只列出简单常用配置:</p><ul><li>title -&gt; 网站标题</li><li>subtitle -&gt; 网站副标题</li><li>description -&gt; 网站描述</li><li>author -&gt; 您的名字</li><li>language -&gt; 网站使用的语言</li></ul><p><strong>注意：进行配置时，需要在冒号:后加一个英文空格</strong></p><p>例：<code>title: test</code></p><h3 id="配置deploy"><a href="#配置deploy" class="headerlink" title="配置deploy"></a>配置<strong>deploy</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br></pre></td></tr></table></figure><p>branch为分支，默认为master,可以不配置 repo为仓库地址，在github上新建仓库后，可复制此地址</p><h2 id="5-2-安装-hexo-deployer-git"><a href="#5-2-安装-hexo-deployer-git" class="headerlink" title="5.2 安装 hexo-deployer-git"></a>5.2 安装 hexo-deployer-git</h2><p><code>$ npm install hexo-deployer-git --save</code></p><h2 id="5-3-部署"><a href="#5-3-部署" class="headerlink" title="5.3 部署"></a>5.3 部署</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>不妨先三部曲，然后</p><p><code>$ hexo d</code></p><p>d 即deploy</p><hr><h1 id="6-换一个好看的主题"><a href="#6-换一个好看的主题" class="headerlink" title="6 换一个好看的主题"></a>6 换一个好看的主题</h1><p>Hexo 中有很多主题，可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官网</a>查看。<br>下面列举更换主题的一般套路：</p><h2 id="6-1-下载主题资源"><a href="#6-1-下载主题资源" class="headerlink" title="6.1 下载主题资源"></a>6.1 下载主题资源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h2 id="6-2-应用下载的主题"><a href="#6-2-应用下载的主题" class="headerlink" title="6.2 应用下载的主题"></a>6.2 应用下载的主题</h2><p>在网站配置文件<strong>config.yml</strong>中，配置theme</p><p><code>theme: next</code><br>next是主题名称，具体的可查看主题的文档</p><h2 id="6-3-主题其他配置"><a href="#6-3-主题其他配置" class="headerlink" title="6.3 主题其他配置"></a>6.3 主题其他配置</h2><p>可在/theme/{theme}/_config.yml 主题的配置文件下进行主题的配置。<br>接下来，可以执行万能的调试命令看看效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><hr><h1 id="7-贴标签，方便搜索"><a href="#7-贴标签，方便搜索" class="headerlink" title="7 贴标签，方便搜索"></a>7 贴标签，方便搜索</h1><h2 id="7-1-两个确认"><a href="#7-1-两个确认" class="headerlink" title="7.1 两个确认"></a>7.1 两个确认</h2><ol><li><p>确认站点配置文件有<br><code>tag_dir: tags</code></p></li><li><p>确认主题配置文件有<br><code>tags: tags</code>   </p></li></ol><h2 id="7-2-新建tags页面"><a href="#7-2-新建tags页面" class="headerlink" title="7.2 新建tags页面"></a>7.2 新建tags页面</h2><p><code>$ hexo new page tags</code><br>此时会在source/下生成tags/index.md文件</p><h2 id="7-3-修改source-tags-index-md"><a href="#7-3-修改source-tags-index-md" class="headerlink" title="7.3 修改source/tags/index.md"></a>7.3 修改source/tags/index.md</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2015-10-20 06:49:50</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>date 可保持系统生成的时间，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>这两行很重要</p><h2 id="7-4-在文章中添加tags"><a href="#7-4-在文章中添加tags" class="headerlink" title="7.4 在文章中添加tags"></a>7.4 在文章中添加tags</h2><p>在文章xx.md中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tags: </span><br><span class="line">- Tag1</span><br><span class="line">- Tag2</span><br><span class="line">- Tag3</span><br></pre></td></tr></table></figure><p>多个Tag可按上面的格式添加<br>其文件头部类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: TagEditText</span><br><span class="line">date: 2019-8-10 22:44:25</span><br><span class="line">tags: </span><br><span class="line">- Tag1</span><br><span class="line">- Tag2</span><br><span class="line">- Tag3</span><br></pre></td></tr></table></figure><hr><h1 id="8-分类，给文章归档"><a href="#8-分类，给文章归档" class="headerlink" title="8 分类，给文章归档"></a>8 分类，给文章归档</h1><h2 id="8-1-两个确认"><a href="#8-1-两个确认" class="headerlink" title="8.1 两个确认"></a>8.1 两个确认</h2><ol><li><p>确认站点配置文件打开了<br><code>category_dir: categories</code></p></li><li><p>确认主题配置文件打开了<br><code>categories: /categories</code></p></li></ol><h2 id="8-2-新建categories文件"><a href="#8-2-新建categories文件" class="headerlink" title="8.2 新建categories文件"></a>8.2 新建categories文件</h2><p><code>$ hexo new page categories</code><br>此时会在source目录下生成categories/index.md文件</p><h2 id="8-3-修改categories-index-md"><a href="#8-3-修改categories-index-md" class="headerlink" title="8.3 修改categories/index.md"></a>8.3 修改categories/index.md</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2015-10-20 06:49:50</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>date 可保持系统生成的时间，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>这两行很重要</p><h2 id="8-4-在文章中添加categories"><a href="#8-4-在文章中添加categories" class="headerlink" title="8.4 在文章中添加categories"></a>8.4 在文章中添加categories</h2><p>在文章xx.md中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">categories: </span><br><span class="line">- cate</span><br></pre></td></tr></table></figure><p>其文件头部类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: TagEditText</span><br><span class="line">date: 2019-8-18 22:44:25</span><br><span class="line">categories: </span><br><span class="line">- cate</span><br></pre></td></tr></table></figure><h1 id="9-NexT主题因为功能完善，使用方便，所以更受欢迎，更多详细内容可查看官网："><a href="#9-NexT主题因为功能完善，使用方便，所以更受欢迎，更多详细内容可查看官网：" class="headerlink" title="9 NexT主题因为功能完善，使用方便，所以更受欢迎，更多详细内容可查看官网："></a>9 NexT主题因为功能完善，使用方便，所以更受欢迎，更多详细内容可查看官网：</h1><p><a href="https://theme-next.org" target="_blank" rel="noopener">https://theme-next.org</a></p><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a></p><h1 id="10-结语"><a href="#10-结语" class="headerlink" title="10 结语"></a>10 结语</h1><p>由于 Hexo 的特殊性，文章均具有本地性限制，我的解决方式是使用<a href="https://www.jianguoyun.com" target="_blank" rel="noopener">坚果云</a>，设置 Hexo 根文件夹 为同步目录，这样即使以后在其他电脑上需要使用 Hexo，在安装完环境后便可使用。<br>Github Pages 没有特意声明限制多少空间，我并不推荐你将图片都放置在 Github 服务器上，你可以使用第三方服务，例如SM.MS 图床、七牛、又拍云等。<br>我使用微博图床，通过<a href="https://weibo.com/" target="_blank" rel="noopener">新浪微博图床</a>来快捷上传图片，且该 chrome 扩展支持 HTTPS 链接。</p><p><mark>本文采用 <a href="https://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank" rel="noopener">CC BY-NC-SA 3.0</a>协议进行许可，在您遵循此协议的情况下，可以自由共享与演绎本文章。</mark></p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
